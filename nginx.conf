user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
    # Configure globally the Identity Plus trust store and the requirement for client certificate
	##

    ssl_protocols               TLSv1.2;
    ssl_prefer_server_ciphers   on;
    ssl_ciphers                 AES256+EECDH:AES256+EDH:!aNULL;
    ssl_client_certificate      /opt/zero-trust/identity-plus-trust-store.pem;
    ssl_verify_client           on;
    ssl_verify_depth            2;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

    # configure identity plus lua module and define memory cache
    init_by_lua_file /etc/nginx/zero-trust-nginx/config.lua;
    lua_shared_dict identity_plus_memcache 100m;

	##
	# Gzip Settings
	##

	gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

    server{
        listen 1330 ssl;
        server_name                 happyiot.stefanppb.identityplus.app;
        ssl_certificate             /opt/zero-trust/service.cer;
        ssl_certificate_key         /opt/zero-trust/cervice.key;


        # invoke the identity plus lua module to validate the certificate
        set_by_lua_file $identity_plus_roles /etc/nginx/zero-trust-nginx/identity-plus.lua;

        location / {
            # terminate the connection if the rolse do not match with the 
            access_by_lua_block {
                if string.find(ngx.var.identity_plus_roles, '"member"') == nil and string.find(ngx.var.identity_plus_roles, '"administrator"') == nil then
                    ngx.status = 400
                    ngx.header["Content-Type"] = "text/plain"
                    ngx.say("Very bad SSL request")
                    return ngx.exit(400)
                end
            }

            proxy_set_header    X-Forwarded-For $remote_addr;
            proxy_set_header    X-Client-Ip $remote_addr;
            proxy_set_header    X-TLS-Client-Serial $ssl_client_serial;
            proxy_set_header    X-Client-Roles $identity_plus_roles;

            proxy_pass          http://10.0.2.15:9090;
        }
    }
}



